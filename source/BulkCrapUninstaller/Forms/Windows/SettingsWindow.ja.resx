<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label5.Text" xml:space="preserve">
    <value>アンインストール開始前のコマンドライン</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>アンインストール終了後のコマンドライン</value>
  </data>
  <data name="checkBoxColorblind.Text" xml:space="preserve">
    <value>カラーブラインドモード</value>
    <comment>Switches colors to be better for color-blind people</comment>
  </data>
  <data name="checkBoxDpiaware.Text" xml:space="preserve">
    <value>DPIを考慮したインターフェイスのスケーリングを有効にする</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>アプリケーションリストでのダブルクリック</value>
  </data>
  <data name="groupBoxMisc.Text" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="checkBoxAutoLoad.Text" xml:space="preserve">
    <value>起動時に「Default.bcul」という名前のアンインストールリストを自動的に読み込む</value>
  </data>
  <data name="checkBoxRatings.Text" xml:space="preserve">
    <value>アプリケーションのユーザー評価を有効にする</value>
  </data>
  <data name="checkBoxUpdateSearch.Text" xml:space="preserve">
    <value>起動時にアップデートを検索する</value>
  </data>
  <data name="checkBoxSendStats.Text" xml:space="preserve">
    <value>匿名での使用統計の送信</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>アプリケーションの言語：</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>言語の変更を有効にするには、アプリケーションを再起動する必要があります。</value>
  </data>
  <data name="radioButtonBackupAsk.Text" xml:space="preserve">
    <value>常に作成依頼をする</value>
  </data>
  <data name="radioButtonBackupNever.Text" xml:space="preserve">
    <value>作成しない</value>
  </data>
  <data name="radioButtonBackupAuto.Text" xml:space="preserve">
    <value>ディレクトリに自動的に作成します：</value>
  </data>
  <data name="groupBoxBackup.Text" xml:space="preserve">
    <value>残留物除去の前にバックアップを取る</value>
  </data>
  <data name="checkBoxShowAllBadJunk.Text" xml:space="preserve">
    <value>常に信頼度の低いジャンクを表示する</value>
  </data>
  <data name="checkBoxLoud.Text" xml:space="preserve">
    <value>サイレントタスクからラウドアンインストーラを削除するように頼む</value>
  </data>
  <data name="checkBoxNeverFeedback.Text" xml:space="preserve">
    <value>フィードバックやヘルプを求めない</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>アンインストール後にジャンクを検索する</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>アンインストール前に復元ポイントを作成する</value>
  </data>
  <data name="groupBoxMessages.Text" xml:space="preserve">
    <value>メッセージボックス</value>
  </data>
  <data name="checkBoxEnableExternal.Text" xml:space="preserve">
    <value>外部アプリケーションの実行を有効にする</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>アンインストールの前後に実行するコマンドを指定できます。1行が1つのコマンドに相当し、「実行」ダイアログを使用した場合と同様に実行されます。

BCUは、現在実行中のコマンドが完了するまで待ってから、次のコマンドを実行します。</value>
  </data>
  <data name="groupBoxExternal.Text" xml:space="preserve">
    <value>外部アプリケーション</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>&amp;閉じる</value>
  </data>
  <data name="tabPageGeneral.Text" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="groupBoxLanguage.Text" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="tabPageInterface.Text" xml:space="preserve">
    <value>インターフェース</value>
  </data>
  <data name="tabPageUninstallation.Text" xml:space="preserve">
    <value>アンインストール</value>
  </data>
  <data name="labelWinUpdateInfo.Text" xml:space="preserve">
    <value>Windows Updateの検出にはWUAを使用しており、動作が遅いです。完了までに2～3分かかることもあります。</value>
  </data>
  <data name="checkBoxScanWinUpdates.Text" xml:space="preserve">
    <value>Windowsアップデート</value>
  </data>
  <data name="labelWinFeatureInfo.Text" xml:space="preserve">
    <value>Windowsの機能の検出にはWMIを使用し、時間がかかるか、システムによっては失敗することがあります（通常はシステムの破損を示します）。</value>
  </data>
  <data name="checkBoxScanWinFeatures.Text" xml:space="preserve">
    <value>Windowsの機能</value>
  </data>
  <data name="checkBoxScanStoreApps.Text" xml:space="preserve">
    <value>Windowsストアアプリ</value>
  </data>
  <data name="checkBoxScanSteam.Text" xml:space="preserve">
    <value>Steam</value>
  </data>
  <data name="checkBoxScoop.Text" xml:space="preserve">
    <value>スコープ</value>
  </data>
  <data name="checkBoxOculus.Text" xml:space="preserve">
    <value>Oculusストア</value>
  </data>
  <data name="checkBoxChoco.Text" xml:space="preserve">
    <value>Chocolatey</value>
  </data>
  <data name="groupBoxAppStores.Text" xml:space="preserve">
    <value>スキャンするアプリケーションストア</value>
  </data>
  <data name="checkBoxScanRegistry.Text" xml:space="preserve">
    <value>レジストリ（有効にしておくことをお勧めします）</value>
  </data>
  <data name="checkBoxScanDrives.Text" xml:space="preserve">
    <value>ドライブ（未登録のアプリを検出します）</value>
  </data>
  <data name="checkBoxPreDefined.Text" xml:space="preserve">
    <value>事前に定義されたルールに基づく</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>アプリケーションの検索</value>
  </data>
  <data name="tabPageDetection.Text" xml:space="preserve">
    <value>検出</value>
  </data>
  <data name="tabPageExternal.Text" xml:space="preserve">
    <value>外付けツール</value>
  </data>
  <data name="checkBoxRemovable.Text" xml:space="preserve">
    <value>リムーバブルドライブのスキャン</value>
    <comment>Scan pendrives, USB hard drives, SD Cards, etc.</comment>
  </data>
  <data name="checkBoxAutoInstallFolderDetect.Text" xml:space="preserve">
    <value>カスタムインストールフォルダーを自動的に検出しようとする</value>
  </data>
  <data name="labelProgramFolders.Text" xml:space="preserve">
    <value>アプリケーションをインストールするカスタムフォルダを指定することができます（例：D:\Applications）。これらのフォルダは、BCUがアンインストールの残骸や未登録のアプリケーション、その他のいくつかのものを検索するために使用されます。必要ではありませんが、これらのフォルダのリストがあると、BCUがよりよく動作します。

Windowsのデフォルトフォルダは常にスキャンされるため、このリストに含める必要はありません。

フルディレクトリパスを使用し、1行に1つのパスを指定します。無効なパスや存在しないディレクトリは無視されます。</value>
  </data>
  <data name="groupBoxProgramFolders.Text" xml:space="preserve">
    <value>プログラムのインストールフォルダ</value>
  </data>
  <data name="tabPageFolders.Text" xml:space="preserve">
    <value>フォルダー</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>スタートアップ</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>ネットワーク</value>
  </data>
  <data name="tabPageMisc.Text" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>バルククラップアンインストーラの設定</value>
  </data>
</root>