<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Enums_YesNoAsk_Ask" xml:space="preserve">
    <value>詢問</value>
  </data>
  <data name="Error_SeparateArgsFromCommand_Empty" xml:space="preserve">
    <value>檔案名稱不能為空。</value>
  </data>
  <data name="Error_SeparateArgsFromCommand_MissingQuotationMark" xml:space="preserve">
    <value>缺少結束引號。</value>
  </data>
  <data name="Error_SeparateArgsFromCommand_NoDot" xml:space="preserve">
    <value>檔案名必須包含由點分隔的副檔名</value>
  </data>
  <data name="FileSize_GB_Long" xml:space="preserve">
    <value>十億位元組</value>
  </data>
  <data name="FileSize_GB_Short" xml:space="preserve">
    <value>GB</value>
  </data>
  <data name="FileSize_KB_Long" xml:space="preserve">
    <value>千位元組</value>
  </data>
  <data name="FileSize_KB_Short" xml:space="preserve">
    <value>KB</value>
  </data>
  <data name="FileSize_MB_Long" xml:space="preserve">
    <value>百萬位元組</value>
  </data>
  <data name="FileSize_MB_Short" xml:space="preserve">
    <value>MB</value>
  </data>
  <data name="FileSize_TB_Long" xml:space="preserve">
    <value>萬億位元組</value>
  </data>
  <data name="FileSize_TB_Short" xml:space="preserve">
    <value>TB</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="ToFuzzyTimeSinceString_Days_Since" xml:space="preserve">
    <value>{0} 天前</value>
  </data>
  <data name="ToFuzzyTimeSinceString_Days_Single" xml:space="preserve">
    <value>昨天</value>
  </data>
  <data name="ToFuzzyTimeSinceString_Hours_Since" xml:space="preserve">
    <value>{0}小時前</value>
  </data>
  <data name="ToFuzzyTimeSinceString_Hours_Single" xml:space="preserve">
    <value>一小時前</value>
  </data>
  <data name="ToFuzzyTimeSinceString_JustNow" xml:space="preserve">
    <value>剛剛</value>
  </data>
  <data name="ToFuzzyTimeSinceString_Minutes_Since" xml:space="preserve">
    <value>{0}分鐘前</value>
  </data>
  <data name="ToFuzzyTimeSinceString_Minutes_Single" xml:space="preserve">
    <value>一分鐘前</value>
  </data>
  <data name="ToFuzzyTimeSinceString_Months_Since" xml:space="preserve">
    <value>{0}個月前</value>
  </data>
  <data name="ToFuzzyTimeSinceString_Months_Single" xml:space="preserve">
    <value>一個月前</value>
  </data>
  <data name="ToFuzzyTimeSinceString_Years_Since" xml:space="preserve">
    <value>{0}年前</value>
  </data>
  <data name="ToFuzzyTimeSinceString_Years_Single" xml:space="preserve">
    <value>一年前</value>
  </data>
  <data name="PremadeDialogs_GenericError_InnerExceptionTitle" xml:space="preserve">
    <value>內部:</value>
  </data>
  <data name="PremadeDialogs_GenericError_Heading" xml:space="preserve">
    <value>應用程式遇到意外錯誤</value>
  </data>
  <data name="PremadeDialogs_GenericError_Title" xml:space="preserve">
    <value>意外錯誤</value>
  </data>
  <data name="PremadeDialogs_KillRunningProcessesQuestion_Details" xml:space="preserve">
    <value>你可能會遺失任何未儲存的資料。為防止資料遺失，請手動關閉應用程式。</value>
  </data>
  <data name="PremadeDialogs_KillRunningProcessesQuestion_Message" xml:space="preserve">
    <value>確定要中止所有程序嗎？</value>
  </data>
  <data name="PremadeDialogs_KillRunningProcessesQuestion_Title" xml:space="preserve">
    <value>中止執行中的程序</value>
  </data>
  <data name="RegistryTools_AddRegToRegistry_FileNotExist" xml:space="preserve">
    <value>路徑未指向有效的.reg檔案</value>
  </data>
  <data name="RegistryTools_RemoveRegistryKey_PathEmptyNull" xml:space="preserve">
    <value>路徑不能為空或Null</value>
  </data>
  <data name="RegistryTools_RemoveRegistryKey_PointsAtRoot" xml:space="preserve">
    <value>路徑不能指向root鍵</value>
  </data>
  <data name="RegistryTools_RemoveRegistryKey_RemoveDefault" xml:space="preserve">
    <value>無法刪除預設值</value>
  </data>
  <data name="PremadeDialogs_GenericErrorExtendedSafe_Heading" xml:space="preserve">
    <value>錯誤詳細訊息:</value>
  </data>
  <data name="PremadeDialogs_GenericError_Details" xml:space="preserve">
    <value>雖然此錯誤不需要關閉應用程式，但某些功能可能會停止工作。大多數與系統文件相關的錯誤都可以安全的忽略。

錯誤訊息:{0}

你可以透過點擊"複製"按鈕將有關此錯誤的詳細訊息複製到剪貼簿。請考慮將此錯誤發送給開發人員。</value>
  </data>
  <data name="FileInfo_CreationTime" xml:space="preserve">
    <value>建立時間</value>
  </data>
  <data name="FileInfo_LastAccessTime" xml:space="preserve">
    <value>最近修改時間</value>
  </data>
  <data name="FileInfo_LastWriteTime" xml:space="preserve">
    <value>最近寫入時間</value>
  </data>
  <data name="FileInfo_Attributes" xml:space="preserve">
    <value>屬性</value>
  </data>
  <data name="FileInfo_IsReadOnly" xml:space="preserve">
    <value>唯讀</value>
  </data>
  <data name="FileInfo_FullName" xml:space="preserve">
    <value>全名</value>
  </data>
  <data name="FileInfo_FileName" xml:space="preserve">
    <value>檔案名</value>
  </data>
  <data name="FileInfo_Size" xml:space="preserve">
    <value>大小</value>
  </data>
  <data name="FileInfo_Directory" xml:space="preserve">
    <value>目錄</value>
  </data>
  <data name="FileInfo_Exists" xml:space="preserve">
    <value>在硬碟上</value>
  </data>
  <data name="FileInfo_Comments" xml:space="preserve">
    <value>註釋</value>
  </data>
  <data name="FileInfo_CompanyName" xml:space="preserve">
    <value>公司名</value>
  </data>
  <data name="FileInfo_FileDescription" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="FileInfo_FileVersion" xml:space="preserve">
    <value>檔案版本</value>
  </data>
  <data name="FileInfo_InternalName" xml:space="preserve">
    <value>內部名稱</value>
  </data>
  <data name="FileInfo_Language" xml:space="preserve">
    <value>語言</value>
  </data>
  <data name="FileInfo_LegalCopyright" xml:space="preserve">
    <value>版權</value>
  </data>
  <data name="FileInfo_LegalTrademarks" xml:space="preserve">
    <value>商標</value>
  </data>
  <data name="FileInfo_OriginalFilename" xml:space="preserve">
    <value>原始檔案名</value>
  </data>
  <data name="FileInfo_ProductName" xml:space="preserve">
    <value>產品名稱</value>
  </data>
  <data name="FileInfo_ProductVersion" xml:space="preserve">
    <value>產品版本</value>
  </data>
</root>